{"version":3,"sources":["redux/messages-reducer.js","components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","assets/img/user.svg","assets/img/preloader.svg","components/common/Preloader/Preloader.module.css","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","messagesReducer","state","action","body","module","exports","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","UsersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","key","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","UsersAPIComponent","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","fallback","UsersContainer","component","Login","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","touched","hasError","formControl","placeholder","validators","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likes","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.08086935.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kate'},\r\n        {id: 2, name: 'Oleg'},\r\n        {id: 3, name: 'Igor'},\r\n        {id: 4, name: 'Valery'},\r\n        {id: 5, name: 'Angelina'},\r\n        {id: 6, name: 'Monica'},\r\n        {id: 7, name: 'Salma'} \r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Bye'}\r\n    ]\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default messagesReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__5YGJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2Zyp0\"};","module.exports = __webpack_public_path__ + \"static/media/user.68f2a6aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.f4d7875d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__aXBQk\"};","import Axios from \"axios\";\r\n\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9972f5c2-570b-494b-93d6-c1efe7447820'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1DSrn\",\"item\":\"Navbar_item__34dZV\",\"active\":\"Navbar_active__24RKL\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps};\r\n        }\r\n        return u;\r\n    });\r\n} \r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst FOLLOWING_IS_IN_PROGRESS = 'FOLLOWING-IS-IN-PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 100,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n \r\n    switch(action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return { \r\n                ...state, \r\n                users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case FOLLOWING_IS_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: FOLLOWING_IS_IN_PROGRESS, isFetching, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n    \r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        // dispatch.setTotalUsersCount(data.totalCount);\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    \r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default UsersReducer;\r\n","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 5}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1); \r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                portionNumber > 1 &&  \r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                    Prev\r\n                </button>\r\n            }\r\n\r\n            {pages\r\n                .filter(p => {\r\n                    return p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n                })\r\n                .map(p => {\r\n                    return <span onClick={() => onPageChanged(p)} className={currentPage === p ? s.selectedPage : ''} key={p}>{p}</span>\r\n            })}\r\n\r\n            {\r\n                portionNumber < portionCount &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                    Next\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/img/user.svg';\r\nimport { NavLink } from 'react-router-dom';\r\n// import { usersAPI } from '../../api/api';\r\n// import Paginator from '../common/Paginator/Paginator';\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={s.userPhoto} alt=\"avatar\"/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    { user.followed \r\n\r\n                        ? <button \r\n                            disabled={followingInProgress.some(id => id === user.id)} \r\n                            onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow\r\n                        </button> \r\n\r\n                        : <button \r\n                            disabled={followingInProgress.some(id => id === user.id)} \r\n                            onClick={() => { follow(user.id) }}>\r\n                                Follow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} \r\n                    onPageChanged={onPageChanged} \r\n                    totalItemsCount={totalUsersCount} \r\n                    pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u} \r\n                                    followingInProgress={props.followingInProgress}\r\n                                    follow={props.follow}\r\n                                    unfollow={props.unfollow} \r\n                                    key={u.id}/> )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users, isFetching) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getUsers } from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}  \r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        isFetching={this.props.isFetching}\r\n                        followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n                      \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n)(UsersAPIComponent);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://pluspng.com/img-png/nasa-logo-png-file-nasa-logo-svg-1237.png\" alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : 'Some error';\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'Remember me')}\r\n\r\n            { error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div> \r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import profileReducer from \"./profile-reducer\";\r\nimport messagesReducer from \"./messages-reducer\";\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport UsersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: UsersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n}); \r\n\r\n// Расширение redux\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, { Component, Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter, withRouter } from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/profile/:userId?' \n              render={ () => {\n                return(\n                  <Suspense fallback={<div>Loading...</div>}>\n                    <ProfileContainer />\n                  </Suspense>\n                );\n              }} />\n\n          <Route path='/dialogs' \n            render={ () => {\n              return (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <DialogsContainer />\n                </Suspense>\n              );\n            }} \n          />\n\n          <Route path='/users' \n    \t\t\trender={ () => <UsersContainer /> } />\n\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n          <Route path='/login' component={Login} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n          <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default SamuraiJSApp;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from './App';\n\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}  validate={validators} component={component} {...props}/> {text}\r\n    </div>\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3Bjf_\",\"error\":\"FormsControls_error__3Ov7L\",\"formSummaryError\":\"FormsControls_formSummaryError__3ACWR\"};","import React from 'react';\r\nimport preloader from '../../../assets/img/preloader.svg';\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return <div className={s.preloader} >\r\n        <img src={preloader} alt=\"preloader\"/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > 30) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3hpxX\",\"loginBlock\":\"Header_loginBlock__Us69u\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likes: 12},\r\n        {id: 2, message: 'It is my first post', likes: 4},\r\n        {id: 3, message: 'So beatiful', likes: 13}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.newPostText,\r\n                likes: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case DELETE_POST: \r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText }); \r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}