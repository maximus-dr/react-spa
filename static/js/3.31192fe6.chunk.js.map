{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength30","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","messagesPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,oBCAhED,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,8HCgB5DC,EAZI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GACRD,EAAMQ,Q,kBCJRC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,yCCqCvCC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,MAG7B,6BACI,6CAQDa,EArDC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,aAEdC,EAAkBF,EAAMG,QACvBC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,QAEtD8B,EAAmBP,EAAMQ,SACxBJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEhC,QAMnD,OAAKF,EAAMmC,OAGN,yBAAKhC,UAAWC,IAAEwB,SACf,yBAAKzB,UAAWC,IAAEgC,cACbT,GAEL,yBAAKxB,UAAWC,IAAE6B,UACd,6BACKD,IAGT,kBAACnB,EAAD,CAAqBG,SAhBT,SAACqB,GACjBrC,EAAMsC,YAAYD,EAAOE,oBAGH,kBAAC,IAAD,CAAUhC,GAAI,Y,iDCnBxCiC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCeRO,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKhD,MAAMmC,OACT,kBAACW,EAAcE,KAAKhD,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAGblB","file":"static/js/3.31192fe6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__qWUsz\",\"messages\":\"Dialogs_messages__1BsJz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__tCtDu\",\"active\":\"DialogItem_active__IikFx\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n\r\n    let messagesElements = state.messages\r\n        .map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n         <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n             </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>  \r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n         </div>\r\n    );\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                    component={Textarea}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                    validate={[required, maxLength30]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/messages-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}